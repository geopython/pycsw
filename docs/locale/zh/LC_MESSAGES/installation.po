#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-23 21:42+0800\n"
"PO-Revision-Date: 2016-06-07 10:58+0800\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"X-Generator: Poedit 1.8.7\n"

#: ../../installation.rst:4
msgid "Installation"
msgstr "安装"

#: ../../installation.rst:7
msgid "System Requirements"
msgstr "系统要求"

#: ../../installation.rst:9
msgid ""
"pycsw is written in `Python <http://python.org>`_, and works with (tested) "
"version 2.6 and 2.7"
msgstr "pycsw 编写语言是 'Python <http: python.org>' _，版本为 2.6或 2.7"

#: ../../installation.rst:11
msgid "pycsw requires the following Python supporting libraries:"
msgstr "pycsw 是由以下Python库支撑的︰"

#: ../../installation.rst:13
msgid "`lxml`_ for XML support"
msgstr "`lxml`_  用于XML 支撑"

#: ../../installation.rst:14
msgid "`SQLAlchemy`_ for database bindings"
msgstr "`SQLAlchemy`_ 用于数据库绑定"

#: ../../installation.rst:15
msgid "`pyproj`_ for coordinate transformations"
msgstr "`pyproj`_ 用于变换坐标"

#: ../../installation.rst:16
msgid "`Shapely`_ for spatial query / geometry support"
msgstr "`Shapely`_ 用于空间查询/ 几何支持"

#: ../../installation.rst:17
msgid "`OWSLib`_ for CSW client and metadata parser"
msgstr "`OWSLib`_ 用于CSW客户端和元数据分析"

#: ../../installation.rst:21
msgid "You can install these dependencies via `easy_install`_ or `pip`_"
msgstr "通过 `easy_install`_ or `pip`_ 可以安装一些与之相关的程序"

#: ../../installation.rst:25
msgid ""
"For :ref:`GeoNode <geonode>` or :ref:`Open Data Catalog <odc>` deployments, "
"SQLAlchemy is not required"
msgstr ""
"可参考 :ref:`GeoNode <geonode>` 或参考 :ref:`打开的数据目录<odc>` 部署，SQLAlchemy 不"
"是必需的"

#: ../../installation.rst:28
msgid "Installing from Source"
msgstr "从源代码安装"

#: ../../installation.rst:30
msgid ""
"`Download <http://pycsw.org/download>`_ the latest stable version or fetch "
"from Git."
msgstr " `下载<http: pycsw.org/download>`_ 最新稳定版本，或从 Git 获取。"

#: ../../installation.rst:33
msgid "For Developers and the Truly Impatient"
msgstr "为开发人员和真正Impatient"

#: ../../installation.rst:35
msgid "The 4 minute install:"
msgstr "安装需要4分钟"

#: ../../installation.rst:53
msgid "The Quick and Dirty Way"
msgstr "快捷方式"

#: ../../installation.rst:59
msgid ""
"Ensure that CGI is enabled for the install directory.  For example, on "
"Apache, if pycsw is installed in ``/srv/www/htdocs/pycsw`` (where the URL "
"will be ``http://host/pycsw/csw.py``), add the following to ``httpd.conf``:"
msgstr ""
"确保在安装目录中 CGI已启用。 例如，对 Apache，如果 pycsw 安装在 ``/srv/www/htdocs/pycsw`` "
"（这时，URL 就会在 ``http://host/pycsw/csw.py`` ），将以下信息添加至 ``httpd.conf`` :"

#: ../../installation.rst:70
msgid ""
"If pycsw is installed in ``cgi-bin``, this should work as expected.  In "
"this case, the :ref:`tests <tests>` application must be moved to a "
"different location to serve static HTML documents."
msgstr ""
"如果 pycsw安装在 ``cgi-bin`` 下，工作就能预期进行。在这种情况下， "
" :ref:`tests<tests>` 应用程序就必须转移到其它位置，成为静态的 HTML 文件。"

#: ../../installation.rst:72
msgid ""
"Make sure, you have all the dependencies from ``requirements.txt and "
"requirements-standalone.txt``"
msgstr ""
"请确保你已经从 ``requirements.txt and requirements-standalone.txt`` 获得所有"
"dependencies"

#: ../../installation.rst:75
msgid "The Clean and Proper Way"
msgstr "适当的方式"

#: ../../installation.rst:83
msgid ""
"At this point, pycsw is installed as a library and requires a CGI ``csw."
"py`` or WSGI ``pycsw/wsgi.py`` script to be served into your web server "
"environment (see below for WSGI configuration/deployment)."
msgstr ""
"在这一点上，pycsw 安装库将 CGI 'csw.py '或 WSGI' pycsw/wsgi.py ' 脚本发送到"
"您的 web 服务器环境 （参见下文 WSGI 配置/部署）。"

#: ../../installation.rst:90
msgid "Installing from the Python Package Index (PyPi)"
msgstr "从 Python Package 指数 (PyPi) 安装"

#: ../../installation.rst:102
msgid "Installing from OpenSUSE Build Service"
msgstr "从 OpenSUSE 生成服务安装"

#: ../../installation.rst:104
msgid ""
"In order to install the OBS package in openSUSE 12.3, one can run the "
"following commands as user ``root``:"
msgstr ""
"若要安装在 openSUSE 12.3 OBS 包，就可以以用户 '根' 身份运行以下命令 ︰"

#: ../../installation.rst:113
msgid ""
"For earlier openSUSE versions change ``12.3`` with ``12.2``. For future "
"openSUSE version use ``Factory``."
msgstr ""
"对于早期 openSUSE 版本 '12.3' 与 '12.2 '。未来 openSUSE 版本将使用 ' "
"Factory '。"

#: ../../installation.rst:115
msgid ""
"An alternative method is to use the `One-Click Installer <http://software."
"opensuse.org/search?q=pycsw&baseproject=openSUSE"
"%3A12.3&lang=en&include_home=true&exclude_debug=true>`_."
msgstr ""
"另一种方法是使用一键式安装程序<http: software.opensuse.org/search?q="
"\"pycsw&baseproject=openSUSE"
"%3A12.3&lang=en&include_home=true&exclude_debug=true>' _."

#: ../../installation.rst:120
msgid "Installing on Ubuntu/Xubuntu/Kubuntu"
msgstr "在 Ubuntu/Xubuntu/系统上安装"

#: ../../installation.rst:122
msgid ""
"In order to install pycsw to an Ubuntu based distribution, one can run the "
"following commands:"
msgstr "为了安装 Ubuntu 基于分布的 pycsw，可以运行以下命令 ︰"

#: ../../installation.rst:130
msgid ""
"An alternative method is to use the OSGeoLive installation script located "
"in ``pycsw/etc/dist/osgeolive``:"
msgstr "另一种方法是在 ' pycsw/etc/dist/osgeolive ' 使用OSGeoLive 安装脚本 ︰"

#: ../../installation.rst:137
msgid ""
"The script installs the dependencies (Apache, lxml, sqlalchemy, shapely, "
"pyproj) and then pycsw to ``/var/www``."
msgstr ""
"该脚本安装 dependencies (Apache，lxml，sqlalchemy，shapely，pyproj)，然后 "
"pycsw 到 ' www/var / '。"

#: ../../installation.rst:140
msgid "Running on Windows"
msgstr "在 Windows 上运行"

#: ../../installation.rst:142
msgid "For Windows installs, change the first line of ``csw.py`` to:"
msgstr "对于Windows 安装，更改 'csw.py ' 的第一行 ︰"

#: ../../installation.rst:149
msgid ""
"The use of ``-u`` is required to properly output gzip-compressed responses."
msgstr "使用 '-u ' 需要正确输出 gzip 压缩响应。"

#: ../../installation.rst:152
msgid "Security"
msgstr "安全性"

#: ../../installation.rst:154
msgid ""
"By default, ``default.cfg`` is at the root of the pycsw install.  If pycsw "
"is setup outside an HTTP server's ``cgi-bin`` area, this file could be "
"read.  The following options protect the configuration:"
msgstr ""
"默认情况下，' default.cfg ' 是 pycsw 安装的根目录。 如果 pycsw 设置在 HTTP "
"服务器 'cgi-bin' 区域以外，此文件就可以被读取。 以下是几项保护配置的选项 ︰"

#: ../../installation.rst:156
msgid ""
"move ``default.cfg`` to a non HTTP accessible area, and modify ``csw.py`` "
"to point to the updated location"
msgstr ""
"将 'default.cfg' 移动到非 HTTP 可访问的区域，并修改 'csw.py' 以指向更新的位"
"置"

#: ../../installation.rst:157
msgid ""
"configure web server to deny access to the configuration.  For example, in "
"Apache, add the following to ``httpd.conf``:"
msgstr ""
"配置 web 服务器，拒绝对配置的访问。 例如，在 Apache 中，在 'httpd.conf '下添"
"加以下内容:"

#: ../../installation.rst:168
msgid "Running on WSGI"
msgstr "在 WSGI 上运行"

#: ../../installation.rst:170
msgid ""
"pycsw supports the `Web Server Gateway Interface`_ (WSGI).  To run pycsw in "
"WSGI mode, use ``pycsw/wsgi.py`` in your WSGI server environment."
msgstr ""
"pycsw 支持 `Web 服务器网关接口`_ (WSGI)。 在 WSGI 模式下运行 pycsw，在 "
"WSGI 服务器环境中使用 ``pycsw/wsgi.py`` 。"

#: ../../installation.rst:175
msgid ""
"``mod_wsgi`` supports only the version of python it was compiled with. If "
"the target server already supports WSGI applications, pycsw will need to "
"use the same python version. `WSGIDaemonProcess`_ provides a ``python-"
"path`` directive that may allow a virtualenv created from the python "
"version ``mod_wsgi`` uses."
msgstr ""
"``mod_wsgi`` 只支持已编译的python版本。如果目标服务器支持 WSGI 应用，pycsw也是"
"相同的 python 版本。`WSGIDaemonProcess`_ 提供一个  ``python-path``  指令，其允"
"许从 python 版本 ``mod_wsgi`` 进行virtualenv 的创建。"

#: ../../installation.rst:179
msgid "Below is an example of configuring with Apache:"
msgstr "下面是Apache 配置的示例 ︰"

#: ../../installation.rst:192
msgid "or use the `WSGI reference implementation`_:"
msgstr "或者使用 `WSGI 参考实例`_ :"

#: ../../installation.rst:199
msgid "which will publish pycsw to ``http://localhost:8000/``"
msgstr " 将pycsw发布到 ``http://localhost:8000/`` "
