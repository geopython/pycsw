#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-23 21:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../installation.rst:4
msgid "Installation"
msgstr ""

#: ../../installation.rst:7
msgid "System Requirements"
msgstr ""

#: ../../installation.rst:9
msgid ""
"pycsw is written in `Python <http://python.org>`_, and works with (tested) "
"version 2.6 and 2.7"
msgstr ""

#: ../../installation.rst:11
msgid "pycsw requires the following Python supporting libraries:"
msgstr ""

#: ../../installation.rst:13
msgid "`lxml`_ for XML support"
msgstr ""

#: ../../installation.rst:14
msgid "`SQLAlchemy`_ for database bindings"
msgstr ""

#: ../../installation.rst:15
msgid "`pyproj`_ for coordinate transformations"
msgstr ""

#: ../../installation.rst:16
msgid "`Shapely`_ for spatial query / geometry support"
msgstr ""

#: ../../installation.rst:17
msgid "`OWSLib`_ for CSW client and metadata parser"
msgstr ""

#: ../../installation.rst:21
msgid "You can install these dependencies via `easy_install`_ or `pip`_"
msgstr ""

#: ../../installation.rst:25
msgid ""
"For :ref:`GeoNode <geonode>` or :ref:`Open Data Catalog <odc>` deployments, "
"SQLAlchemy is not required"
msgstr ""

#: ../../installation.rst:28
msgid "Installing from Source"
msgstr ""

#: ../../installation.rst:30
msgid ""
"`Download <http://pycsw.org/download>`_ the latest stable version or fetch "
"from Git."
msgstr ""

#: ../../installation.rst:33
msgid "For Developers and the Truly Impatient"
msgstr ""

#: ../../installation.rst:35
msgid "The 4 minute install:"
msgstr ""

#: ../../installation.rst:53
msgid "The Quick and Dirty Way"
msgstr ""

#: ../../installation.rst:59
msgid ""
"Ensure that CGI is enabled for the install directory.  For example, on "
"Apache, if pycsw is installed in ``/srv/www/htdocs/pycsw`` (where the URL "
"will be ``http://host/pycsw/csw.py``), add the following to ``httpd.conf``:"
msgstr ""

#: ../../installation.rst:70
msgid ""
"If pycsw is installed in ``cgi-bin``, this should work as expected.  In this"
" case, the :ref:`tests <tests>` application must be moved to a different "
"location to serve static HTML documents."
msgstr ""

#: ../../installation.rst:72
msgid ""
"Make sure, you have all the dependencies from ``requirements.txt and "
"requirements-standalone.txt``"
msgstr ""

#: ../../installation.rst:75
msgid "The Clean and Proper Way"
msgstr ""

#: ../../installation.rst:83
msgid ""
"At this point, pycsw is installed as a library and requires a CGI ``csw.py``"
" or WSGI ``pycsw/wsgi.py`` script to be served into your web server "
"environment (see below for WSGI configuration/deployment)."
msgstr ""

#: ../../installation.rst:90
msgid "Installing from the Python Package Index (PyPi)"
msgstr ""

#: ../../installation.rst:102
msgid "Installing from OpenSUSE Build Service"
msgstr ""

#: ../../installation.rst:104
msgid ""
"In order to install the OBS package in openSUSE 12.3, one can run the "
"following commands as user ``root``:"
msgstr ""

#: ../../installation.rst:113
msgid ""
"For earlier openSUSE versions change ``12.3`` with ``12.2``. For future "
"openSUSE version use ``Factory``."
msgstr ""

#: ../../installation.rst:115
msgid ""
"An alternative method is to use the `One-Click Installer "
"<http://software.opensuse.org/search?q=pycsw&baseproject=openSUSE%3A12.3&lang=en&include_home=true&exclude_debug=true>`_."
msgstr ""

#: ../../installation.rst:120
msgid "Installing on Ubuntu/Xubuntu/Kubuntu"
msgstr ""

#: ../../installation.rst:122
msgid ""
"In order to install pycsw to an Ubuntu based distribution, one can run the "
"following commands:"
msgstr ""

#: ../../installation.rst:130
msgid ""
"An alternative method is to use the OSGeoLive installation script located in"
" ``pycsw/etc/dist/osgeolive``:"
msgstr ""

#: ../../installation.rst:137
msgid ""
"The script installs the dependencies (Apache, lxml, sqlalchemy, shapely, "
"pyproj) and then pycsw to ``/var/www``."
msgstr ""

#: ../../installation.rst:140
msgid "Running on Windows"
msgstr ""

#: ../../installation.rst:142
msgid "For Windows installs, change the first line of ``csw.py`` to:"
msgstr ""

#: ../../installation.rst:149
msgid ""
"The use of ``-u`` is required to properly output gzip-compressed responses."
msgstr ""

#: ../../installation.rst:152
msgid "Security"
msgstr ""

#: ../../installation.rst:154
msgid ""
"By default, ``default.cfg`` is at the root of the pycsw install.  If pycsw "
"is setup outside an HTTP server's ``cgi-bin`` area, this file could be read."
"  The following options protect the configuration:"
msgstr ""

#: ../../installation.rst:156
msgid ""
"move ``default.cfg`` to a non HTTP accessible area, and modify ``csw.py`` to"
" point to the updated location"
msgstr ""

#: ../../installation.rst:157
msgid ""
"configure web server to deny access to the configuration.  For example, in "
"Apache, add the following to ``httpd.conf``:"
msgstr ""

#: ../../installation.rst:168
msgid "Running on WSGI"
msgstr ""

#: ../../installation.rst:170
msgid ""
"pycsw supports the `Web Server Gateway Interface`_ (WSGI).  To run pycsw in "
"WSGI mode, use ``pycsw/wsgi.py`` in your WSGI server environment."
msgstr ""

#: ../../installation.rst:175
msgid ""
"``mod_wsgi`` supports only the version of python it was compiled with. If "
"the target server already supports WSGI applications, pycsw will need to use"
" the same python version. `WSGIDaemonProcess`_ provides a ``python-path`` "
"directive that may allow a virtualenv created from the python version "
"``mod_wsgi`` uses."
msgstr ""

#: ../../installation.rst:179
msgid "Below is an example of configuring with Apache:"
msgstr ""

#: ../../installation.rst:192
msgid "or use the `WSGI reference implementation`_:"
msgstr ""

#: ../../installation.rst:199
msgid "which will publish pycsw to ``http://localhost:8000/``"
msgstr ""
