# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2015, Tom Kralidis This work is licensed under a
# Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the pycsw package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.3-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-08 22:54+0800\n"
"PO-Revision-Date: 2022-03-09 10:56+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../docker.rst:2
msgid "Docker"
msgstr "Docker"

#: ../../docker.rst:5
msgid "Installation"
msgstr "安装"

#: ../../docker.rst:7
msgid ""
"pycsw  provides an official `Docker`_ image which is made available on both the "
"`geopython Docker Hub`_ and our `GitHub Container Registry`_."
msgstr ""
"pycsw 提供了一个官方的 `Docker`_ 镜像，可在 `geopython Docker Hub`_ 和 `GitHub "
"Container Registry`_ 上使用。"

#: ../../docker.rst:9
msgid ""
"Either ``IMAGE`` can be called with the ``docker`` command, ``geopython/pycsw`` from "
"DockerHub or ``ghcr.io/geophython/pycsw`` from the GitHub Container Registry. "
"Examples below use ``geopython/pygeoapi``."
msgstr ""
"可以使用 docker 命令、DockerHub 中的 geopython/pycsw 或 GitHub 容器注册表中的 ghcr."
"io/geophython/pycsw 调用 IMAGE 。下面的示例使用 ``geopython/pygeoapi``。"

#: ../../docker.rst:11
msgid ""
"Assuming you already have docker installed, you can get a pycsw instance up and "
"running run with the default built-in configuration:"
msgstr "假设已经安装了docker，可以通过发出以下命令来启动和运行pycsw实例:"

#: ../../docker.rst:21
msgid "...then browse to http://localhost:8000"
msgstr "...然后浏览到 http://localhost:8000"

#: ../../docker.rst:23
msgid ""
"Docker will retrieve the pycsw image (if needed) and then start a new container "
"listening on port 8000."
msgstr "Docker 将检索 pycsw 映像（如果需要），然后在端口 8000 上启动一个新容器。"

#: ../../docker.rst:26
msgid ""
"The default configuration will run pycsw with an sqlite repository backend loaded "
"with some test data from the CITE test suite. You can use this to take pycsw for a "
"test drive."
msgstr ""
"默认配置将运行pycsw, sqlite存储库后端装载来自CITE测试套件的一些测试数据。可使用它来测"
"试pycsw。"

#: ../../docker.rst:32
msgid "Inspect logs"
msgstr "检查日志"

#: ../../docker.rst:34
msgid ""
"The default configuration for the docker image outputs logs to stdout. This is "
"common practice with docker containers and enables the inspection of logs with the "
"``docker logs`` command::"
msgstr ""
"docker 映像的默认配置将日志输出到标准输出。这是 docker 容器的常见做法，可以使用 "
"docker logs 命令检查日志::"

#: ../../docker.rst:50
msgid ""
"In order to have pycsw logs being sent to standard output you must set ``server."
"logfile=`` in the pycsw configuration file."
msgstr ""
"为了将pycsw日志发送到标准输出，必须在pycsw配置文件中设置 ``server.logfile=`` 。"

#: ../../docker.rst:55
msgid "Using pycsw-admin.py"
msgstr "使用 pycsw-admin.py"

#: ../../docker.rst:57
msgid ""
"``pycsw-admin.py`` can be executed on a running container by using ``docker exec``::"
msgstr "``pycsw-admin.py`` 可以使用 ``docker exec`` 在正在运行的容器上执行::"

#: ../../docker.rst:64
msgid "Running custom pycsw containers"
msgstr "运行自定义PysCW容器"

#: ../../docker.rst:67
msgid "pycsw configuration"
msgstr "pycsw 配置"

#: ../../docker.rst:69
msgid ""
"It is possible to supply a custom configuration file for pycsw as a bind mount or as "
"a docker secret (in the case of docker swarm). The configuration file is searched at "
"the value of the ``PYCSW_CONFIG`` environmental variable, which defaults to ``/etc/"
"pycsw/pycsw.cfg``."
msgstr ""
"可以为pycsw提供自定义配置文件作为绑定安装或作为docker秘密（在docker群集的情况下）。配"
"置文件在 ``PYCSW_CONFIG`` 环境变量的值处进行搜索，该环境变量默认为 ``/etc/pycsw/"
"pycsw.cfg`` 。"

#: ../../docker.rst:74
msgid "Supplying the configuration file via bind mount::"
msgstr "通过绑定挂载提供配置文件::"

#: ../../docker.rst:83
msgid "Supplying the configuration file via docker secrets::"
msgstr "通过docker 机密提供配置文件::"

#: ../../docker.rst:95
msgid "sqlite repositories"
msgstr "sqlite 存储库"

#: ../../docker.rst:97
msgid ""
"The default database repository is the CITE database that is used for running "
"pycsw's test suites. Docker volumes may be used to specify a custom sqlite database "
"path. It should be mounted under ``/var/lib/pycsw``::"
msgstr ""
"默认的数据库存储库是用于运行pycsw测试套件的CITE数据库。Docker卷可以用来指定自定义"
"sqlite数据库路径。它应该安装在 ``/var/lib/pycsw``::"

#: ../../docker.rst:112
msgid "PostgreSQL repositories"
msgstr "PostgreSQL存储库"

#: ../../docker.rst:114
msgid ""
"Specifying a PostgreSQL repository is just a matter of configuring a custom pycsw."
"cfg file with the correct specification."
msgstr "指定PostgreSQL存储库只是用正确的规范配置自定义pycsw.cfg 文件的问题。"

#: ../../docker.rst:117
msgid ""
"Check `pycsw's github repository`_ for an example of a docker-compose/stack file "
"that spins up a postgis database together with a pycsw instance."
msgstr ""
"查看 `pycsw's github repository`_ ，例如 docker-compose/stack文件，该文件将postgis数"
"据库与pycsw实例一起旋转。"

#: ../../docker.rst:122
msgid "Setting up a development environment with docker"
msgstr "用docker建立开发环境"

#: ../../docker.rst:124
msgid ""
"Working on pycsw's code using docker enables an isolated environment that helps "
"ensuring reproducibility while at the same time keeping your base system free from "
"pycsw related dependencies. This can be achieved by:"
msgstr ""
"使用docker处理pycsw的代码可以实现一个隔离的环境，它有助于确保可重现性,同时使基本系统"
"免受pycsw相关依赖项的影响。这可以通过以下方式实现:"

#: ../../docker.rst:128
msgid "Cloning pycsw's repository locally;"
msgstr "在本地克隆 pycsw 的仓库；"

#: ../../docker.rst:129
msgid ""
"Starting up a docker container with appropriately set up bind mounts. In addition, "
"the pycsw docker image supports a ``reload`` flag that turns on automatic reloading "
"of the gunicorn web server whenever the code changes;"
msgstr ""
"使用适当的绑定安装启动docker容器。此外，pycsw docker映像支持 ``reload`` 标志，当代码"
"发生变化时，该标志将自动重新加载gunicorn web服务器;"

#: ../../docker.rst:132
msgid ""
"Installing the development dependencies by using ``docker exec`` with the root user;"
msgstr "与root用户一起使用 ``docker exec`` 安装开发依赖项;"

#: ../../docker.rst:135
msgid "The following instructions set up a fully working development environment::"
msgstr "以下说明建立了一个完整工作的开发环境:"

#: ../../docker.rst:169
msgid ""
"Please note that the pycsw image only uses python 3.5 and that it also does not "
"install pycsw in editable mode. As such it is not possible to use ``tox``."
msgstr ""
"请注意，pycsw映像只使用python 3.5，而且它也不以可编辑模式安装pycsw。因此，不可能使用 "
"``tox``。"

#: ../../docker.rst:173
msgid ""
"Since the docs directory is bind mounted from your host machine into the container, "
"after building the docs you may inspect their content visually, for example by "
"running::"
msgstr ""
"由于docs目录是从主机绑定到容器中的，所以在构建docs之后，可以可视化地检查内容，例如，"
"通过运行::"

#: ../../docker.rst:180
msgid "Kubernetes"
msgstr "Kubernetes"

#: ../../docker.rst:182
msgid "For `Kubernetes`_ orchestration, run the following in ``docker/kubernetes``:"
msgstr "对于 `Kubernetes`_ 编排，在 `docker/kubernetes` 中运行以下命令："

#: ../../docker.rst:191
msgid "Helm"
msgstr "Helm"

#: ../../docker.rst:193
msgid "For Kubernetes deployment via `Helm`_, run the following in ``docker/helm``:"
msgstr "对于通过 `Helm`_ 部署 Kubernetes，在 `docker/helm` 中运行以下命令："

#~ msgid ""
#~ "pycsw is available as a Docker image. The image is hosted on the `Docker Hub`_."
#~ msgstr "pycsw可用作 Docker图像。图像被寄存在 `Docker Hub`_. 上。"
