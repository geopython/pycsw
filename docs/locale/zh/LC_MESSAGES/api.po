# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2015, Tom Kralidis This work is licensed under a
# Creative Commons Attribution 4.0 International License
# This file is distributed under the same license as the pycsw package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.1-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-08 22:54+0800\n"
"PO-Revision-Date: 2022-03-09 09:44+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../api.rst:4
msgid "API"
msgstr "API"

#: ../../api.rst:6
msgid ""
"Python applications can integrate pycsw into their custom workflows.  "
"This allows for seamless integate within frameworks such as Flask and "
"Django."
msgstr ""
"Python应用可以在自己的工作流中集成 pycsw 。这样就允许在 Flask与 Django 这"
"样的框架中无缝集成。"

#: ../../api.rst:9
msgid ""
"Below are examples of where using the API (as opposed to the default "
"WSGI/CGI services could be used:"
msgstr "下面是一些使用API的示例（相对于默认的WSGI/CGI服务，可以使用:"

#: ../../api.rst:12
msgid "configuration based on a Python dict, or stored in a database"
msgstr "基于Python字典 进行配置，或存储在数据库中"

#: ../../api.rst:13
msgid "downstream request environment / framework (Flask, Django)"
msgstr "下游请求环境/框架（Flask，Django）"

#: ../../api.rst:14
msgid "authentication or authorization logic"
msgstr "认证或授权逻辑"

#: ../../api.rst:15
msgid "forcing CSW version 2.0.2 as default"
msgstr "强制使用 CSW 版本2.0.2作为默认值"

#: ../../api.rst:18
msgid "OARec Flask Example"
msgstr "OARec Flask 示例"

#: ../../api.rst:20
msgid ""
"See https://github.com/geopython/pycsw/blob/master/pycsw/wsgi_flask.py "
"for how to implement a Flask wrapper atop all pycsw supported APIs.  "
"Note the use of Flask blueprints to enable integration with downstream "
"Flask applications."
msgstr ""
"请参阅 https://github.com/geopython/pycsw/blob/master/pycsw/wsgi_flask."
"py 了解如何在所有 pycsw 支持的 API 上实现 Flask 包装器。请注意使用 Flask "
"蓝图来实现与下游 Flask 应用程序的集成。"

#: ../../api.rst:25
msgid "Simple Flask blueprint example"
msgstr "简单的 Flask 蓝图示例"

#: ../../api.rst:43
msgid ""
"In the above example, all pycsw endpoints are made available under "
"``http://localhost:8000/oapi``."
msgstr ""
"在上面的示例中，所有 pycsw 端点都在 http://localhost:8000/oapi 下可用。"

#: ../../api.rst:46
msgid "Simple CSW Flask Example"
msgstr "简单的 CSW Flask 示例"
