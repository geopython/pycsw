#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-11-23 21:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../configuration.rst:4
msgid "Configuration"
msgstr ""

#: ../../configuration.rst:6
msgid ""
"pycsw's runtime configuration is defined by ``default.cfg``.  pycsw ships "
"with a sample configuration (``default-sample.cfg``).  Copy the file to "
"``default.cfg`` and edit the following:"
msgstr ""

#: ../../configuration.rst:8
msgid "**[server]**"
msgstr ""

#: ../../configuration.rst:10
msgid "**home**: the full filesystem path to pycsw"
msgstr ""

#: ../../configuration.rst:11
msgid "**url**: the URL of the resulting service"
msgstr ""

#: ../../configuration.rst:12
msgid "**mimetype**: the MIME type when returning HTTP responses"
msgstr ""

#: ../../configuration.rst:13
msgid ""
"**language**: the ISO 639-1 language and ISO 3166-1 alpha2 country code of "
"the service (e.g. ``en-CA``, ``fr-CA``, ``en-US``)"
msgstr ""

#: ../../configuration.rst:14
msgid ""
"**encoding**: the content type encoding (e.g. ``ISO-8859-1``, see "
"https://docs.python.org/2/library/codecs.html#standard-encodings).  Default "
"value is 'UTF-8'"
msgstr ""

#: ../../configuration.rst:15
msgid ""
"**maxrecords**: the maximum number of records to return by default.  This "
"value is enforced if a CSW's client's ``maxRecords`` parameter is greater "
"than ``server.maxrecords`` to limit capacity.  See :ref:`maxrecords-"
"handling` for more information"
msgstr ""

#: ../../configuration.rst:16
msgid ""
"**loglevel**: the logging level (see "
"http://docs.python.org/library/logging.html#logging-levels)"
msgstr ""

#: ../../configuration.rst:17
msgid "**logfile**: the full file path to the logfile"
msgstr ""

#: ../../configuration.rst:18
msgid ""
"**ogc_schemas_base**: base URL of OGC XML schemas tree file structure "
"(default is http://schemas.opengis.net)"
msgstr ""

#: ../../configuration.rst:19
msgid ""
"**federatedcatalogues**: comma delimited list of CSW endpoints to be used "
"for distributed searching, if requested by the client (see "
":ref:`distributedsearching`)"
msgstr ""

#: ../../configuration.rst:20
msgid ""
"**pretty_print**: whether to pretty print the output (``true`` or "
"``false``).  Default is ``false``"
msgstr ""

#: ../../configuration.rst:21
msgid ""
"**gzip_compresslevel**: gzip compression level, lowest is ``1``, highest is "
"``9``.  Default is off"
msgstr ""

#: ../../configuration.rst:22
msgid ""
"**domainquerytype**: for GetDomain operations, how to output domain values."
"  Accepted values are ``list`` and ``range`` (min/max). Default is ``list``"
msgstr ""

#: ../../configuration.rst:23
msgid ""
"**domaincounts**: for GetDomain operations, whether to provide frequency "
"counts for values.  Accepted values are ``true`` and ``False``. Default is "
"``false``"
msgstr ""

#: ../../configuration.rst:24
msgid ""
"**profiles**: comma delimited list of profiles to load at runtime (default "
"is none).  See :ref:`profiles`"
msgstr ""

#: ../../configuration.rst:25
msgid ""
"**smtp_host**: SMTP host for processing ``csw:ResponseHandler`` parameter "
"via outgoing email requests (default is ``localhost``)"
msgstr ""

#: ../../configuration.rst:26
msgid ""
"**spatial_ranking**: parameter that enables (``true`` or ``false``) ranking "
"of spatial query results as per `K.J. Lanfear 2006 - A Spatial Overlay "
"Ranking Method for a Geospatial Search of Text Objects  "
"<http://pubs.usgs.gov/of/2006/1279/2006-1279.pdf>`_."
msgstr ""

#: ../../configuration.rst:28
msgid "**[manager]**"
msgstr ""

#: ../../configuration.rst:30
msgid ""
"**transactions**: whether to enable transactions (``true`` or ``false``).  "
"Default is ``false`` (see :ref:`transactions`)"
msgstr ""

#: ../../configuration.rst:31
msgid ""
"**allowed_ips**: comma delimited list of IP addresses (e.g. 192.168.0.103), "
"wildcards (e.g. 192.168.0.*) or CIDR notations (e.g. 192.168.100.0/24) "
"allowed to perform transactions (see :ref:`transactions`)"
msgstr ""

#: ../../configuration.rst:32
msgid ""
"**csw_harvest_pagesize**: when harvesting other CSW servers, the number of "
"records per request to page by (default is 10)"
msgstr ""

#: ../../configuration.rst:34
msgid "**[metadata:main]**"
msgstr ""

#: ../../configuration.rst:36
msgid "**identification_title**: the title of the service"
msgstr ""

#: ../../configuration.rst:37
msgid "**identification_abstract**: some descriptive text about the service"
msgstr ""

#: ../../configuration.rst:38
msgid ""
"**identification_keywords**: comma delimited list of keywords about the "
"service"
msgstr ""

#: ../../configuration.rst:39
msgid ""
"**identification_keywords_type**: keyword type as per the `ISO 19115 "
"MD_KeywordTypeCode codelist "
"<http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#MD_KeywordTypeCode>`_)."
"  Accepted values are ``discipline``, ``temporal``, ``place``, ``theme``, "
"``stratum``"
msgstr ""

#: ../../configuration.rst:40
msgid "**identification_fees**: fees associated with the service"
msgstr ""

#: ../../configuration.rst:41
msgid ""
"**identification_accessconstraints**: access constraints associated with the"
" service"
msgstr ""

#: ../../configuration.rst:42
msgid "**provider_name**: the name of the service provider"
msgstr ""

#: ../../configuration.rst:43
msgid "**provider_url**: the URL of the service provider"
msgstr ""

#: ../../configuration.rst:44
msgid "**contact_name**: the name of the provider contact"
msgstr ""

#: ../../configuration.rst:45
msgid "**contact_position**: the position title of the provider contact"
msgstr ""

#: ../../configuration.rst:46
msgid "**contact_address**: the address of the provider contact"
msgstr ""

#: ../../configuration.rst:47
msgid "**contact_city**: the city of the provider contact"
msgstr ""

#: ../../configuration.rst:48
msgid ""
"**contact_stateorprovince**: the province or territory of the provider "
"contact"
msgstr ""

#: ../../configuration.rst:49
msgid "**contact_postalcode**: the postal code of the provider contact"
msgstr ""

#: ../../configuration.rst:50
msgid "**contact_country**: the country of the provider contact"
msgstr ""

#: ../../configuration.rst:51
msgid "**contact_phone**: the phone number of the provider contact"
msgstr ""

#: ../../configuration.rst:52
msgid "**contact_fax**: the facsimile number of the provider contact"
msgstr ""

#: ../../configuration.rst:53
msgid "**contact_email**: the email address of the provider contact"
msgstr ""

#: ../../configuration.rst:54
msgid ""
"**contact_url**: the URL to more information about the provider contact"
msgstr ""

#: ../../configuration.rst:55
msgid "**contact_hours**: the hours of service to contact the provider"
msgstr ""

#: ../../configuration.rst:56
msgid "**contact_instructions**: the how to contact the provider contact"
msgstr ""

#: ../../configuration.rst:57
msgid ""
"**contact_role**: the role of the provider contact as per the `ISO 19115 "
"CI_RoleCode codelist "
"<http://www.isotc211.org/2005/resources/Codelist/gmxCodelists.xml#CI_RoleCode>`_)."
"  Accepted values are ``author``, ``processor``, ``publisher``, "
"``custodian``, ``pointOfContact``, ``distributor``, ``user``, "
"``resourceProvider``, ``originator``, ``owner``, ``principalInvestigator``"
msgstr ""

#: ../../configuration.rst:59
msgid "**[repository]**"
msgstr ""

#: ../../configuration.rst:61
msgid ""
"**database**: the full file path to the metadata database, in database URL "
"format (see http://docs.sqlalchemy.org/en/latest/core/engines.html#database-"
"urls)"
msgstr ""

#: ../../configuration.rst:62
msgid ""
"**table**: the table name for metadata records (default is ``records``).  If"
" you are using PostgreSQL with a DB schema other than ``public``, qualify "
"the table like ``myschema.table``"
msgstr ""

#: ../../configuration.rst:63
msgid ""
"**mappings**: custom repository mappings (see :ref:`custom_repository`)"
msgstr ""

#: ../../configuration.rst:64
msgid ""
"**source**: the source of this repository only if not local (e.g. "
":ref:`geonode`, :ref:`odc`).  Supported values are ``geonode``, ``odc``"
msgstr ""

#: ../../configuration.rst:65
msgid ""
"**filter**: server side database filter to apply as mask to all CSW requests"
" (see :ref:`repofilters`)"
msgstr ""

#: ../../configuration.rst:69
msgid ""
"See :ref:`administration` for connecting your metadata repository and "
"supported information models."
msgstr ""

#: ../../configuration.rst:74
msgid "MaxRecords Handling"
msgstr ""

#: ../../configuration.rst:76
msgid ""
"The The following describes how ``maxRecords`` is handled by the "
"configuration when handling ``GetRecords`` requests:"
msgstr ""

#: ../../configuration.rst:1
msgid "server.maxrecords"
msgstr ""

#: ../../configuration.rst:1
msgid "GetRecords.maxRecords"
msgstr ""

#: ../../configuration.rst:1
msgid "Result"
msgstr ""

#: ../../configuration.rst:1 ../../configuration.rst:1
msgid "none set"
msgstr ""

#: ../../configuration.rst:1 ../../configuration.rst:1
msgid "none passed"
msgstr ""

#: ../../configuration.rst:1
msgid "10 (CSW default)"
msgstr ""

#: ../../configuration.rst:1 ../../configuration.rst:1
#: ../../configuration.rst:1 ../../configuration.rst:1
#: ../../configuration.rst:1 ../../configuration.rst:1
msgid "20"
msgstr ""

#: ../../configuration.rst:1
msgid "14"
msgstr ""

#: ../../configuration.rst:1 ../../configuration.rst:1
msgid "100"
msgstr ""

#: ../../configuration.rst:1
msgid "200"
msgstr ""

#: ../../configuration.rst:90
msgid "Alternate Configurations"
msgstr ""

#: ../../configuration.rst:92
msgid ""
"By default, pycsw loads ``default.cfg`` at runtime.  To load an alternate "
"configuration, modify ``csw.py`` to point to the desired configuration.  "
"Alternatively, pycsw supports explicitly specifiying a configuration by "
"appending ``config=/path/to/default.cfg`` to the base URL of the service "
"(e.g. "
"``http://localhost/pycsw/csw.py?config=tests/suites/default/default.cfg&service=CSW&version=2.0.2&request=GetCapabilities``)."
"  When the ``config`` parameter is passed by a CSW client, pycsw will "
"override the default configuration location and subsequent settings with "
"those of the specified configuration."
msgstr ""

#: ../../configuration.rst:94
msgid ""
"This also provides the functionality to deploy numerous CSW servers with a "
"single pycsw installation."
msgstr ""

#: ../../configuration.rst:97
msgid "Hiding the Location"
msgstr ""

#: ../../configuration.rst:99
msgid ""
"Some deployments with alternate configurations prefer not to advertise the "
"base URL with the ``config=`` approach.  In this case, there are many "
"options to advertise the base URL."
msgstr ""

#: ../../configuration.rst:102
msgid "Environment Variables"
msgstr ""

#: ../../configuration.rst:104
msgid ""
"One option is using Apache's ``Alias`` and ``SetEnvIf`` directives.  For "
"example, given the base URL "
"``http://localhost/pycsw/csw.py?config=foo.cfg``, set the following in "
"Apache's ``httpd.conf``:"
msgstr ""

#: ../../configuration.rst:113
msgid "Apache must be restarted after changes to ``httpd.conf``"
msgstr ""

#: ../../configuration.rst:115
msgid ""
"pycsw will use the configuration as set in the ``PYCSW_CONFIG`` environment "
"variable in the same manner as if it was specified in the base URL.  Note "
"that the configuration value ``server.url`` value must match the "
"``Request_URI`` value so as to advertise correctly in pycsw's Capabilities "
"XML."
msgstr ""

#: ../../configuration.rst:118
msgid "Wrapper Script"
msgstr ""

#: ../../configuration.rst:120
msgid ""
"Another option is to write a simple wrapper (e.g. ``csw-foo.sh``), which "
"provides the same functionality and can be deployed without restarting "
"Apache:"
msgstr ""
