#
msgid ""
msgstr ""
"Project-Id-Version: pycsw 2.0-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-08 22:54+0800\n"
"PO-Revision-Date: 2022-03-09 10:43+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 3.0.1\n"

#: ../../distributedsearching.rst:4
msgid "Distributed Searching"
msgstr "分布式搜索"

#: ../../distributedsearching.rst:8
msgid ""
"Distributed search is supported for CSW 2/3 APIs.  OARec support will be implemented following "
"guidance from the OARec specification once available."
msgstr "CSW 2/3 API 支持分布式搜索。一旦可用，OARec 支持将按照 OARec 规范的指导实施。"

#: ../../distributedsearching.rst:13
msgid "Your server must be able to make outgoing HTTP requests for this functionality."
msgstr "此功能的作用就是可以使你的服务器传出HTTP请求。"

#: ../../distributedsearching.rst:15
msgid ""
"pycsw has the ability to perform distributed searching against other CSW servers.  Distributed "
"searching is disabled by default; to enable, ``server.federatedcatalogues`` must be set.  A CSW "
"client must issue a GetRecords request with ``csw:DistributedSearch`` specified, along with an "
"optional ``hopCount`` attribute (see subclause 10.8.4.13 of the CSW specification).  When enabled, "
"pycsw will search all specified catalogues and return a unified set of search results to the "
"client.  Due to the distributed nature of this functionality, requests will take extra time to "
"process compared to queries against the local repository."
msgstr ""
"pycsw与其它CSW服务器不同的是，它有能力自己实现分布式搜索。此分布式搜索默认为禁用；若想启用，必须设置 "
"``server.federatedcatalogues`` 。CSW客户端会发出一个 ``Getrecords`` 指定性请求 ``csw:"
"DistributedSearch`` ，以及一个可选的 ``hopCount`` 属性（见CSW规范中第10.8.4.13 ）。当启用时，pycsw会"
"搜索所有指定的目录并会将一组统一的搜索结果返回给客户端。由于此功能的分布式性质，若要查询本地存储库，"
"请求可能会需要更多的时间来处理。"

#: ../../distributedsearching.rst:18
msgid "Scenario: Federated Search"
msgstr "场景：联合搜索"

#: ../../distributedsearching.rst:20
msgid ""
"pycsw deployment with 3 configurations (CSW-1, CSW-2, CSW-3), subsequently providing three (3) "
"endpoints.  Each endpoint is based on an opaque metadata repository (based on theme/place/"
"discipline, etc.).  Goal is to perform a single search against all endpoints."
msgstr ""
"pycsw部署共有3项配置（CSW-1，CSW-2，CSW-3），同时也会提供3个端点。每个端点是基于一个不透明的元数据信"
"息库（基于主题/地点/学科等）。目标是执行对所有端点一对一的搜索。"

#: ../../distributedsearching.rst:22
msgid ""
"pycsw realizes this functionality by supporting :ref:`alternate configurations <alternate-"
"configurations>`, and exposes the additional CSW endpoint(s) with the following design pattern:"
msgstr ""
"pycsw 通过支持 :ref:`alternate configuration <alternate-configurations>` 来实现此功能，并使用以下设计"
"模式公开额外的 CSW 端点："

#: ../../distributedsearching.rst:24
msgid "CSW-1: ``http://localhost/pycsw/csw.py?config=CSW-1.cfg``"
msgstr "CSW-1: ``http://localhost/pycsw/csw.py?config=CSW-1.cfg``"

#: ../../distributedsearching.rst:26
msgid "CSW-2: ``http://localhost/pycsw/csw.py?config=CSW-2.cfg``"
msgstr "CSW-2: ``http://localhost/pycsw/csw.py?config=CSW-2.cfg``"

#: ../../distributedsearching.rst:28
msgid "CSW-3: ``http://localhost/pycsw/csw.py?config=CSW-3.cfg``"
msgstr "CSW-3: ``http://localhost/pycsw/csw.py?config=CSW-3.cfg``"

#: ../../distributedsearching.rst:30
msgid ""
"...where the ``*.cfg`` configuration files are configured for each respective metadata repository.  "
"The above CSW endpoints can be interacted with as usual."
msgstr ""
"只要有 ``*.cfg`` 配置文件，就可以为每个元数据存储库进行配置。以上的CSW端点也可以像往常一样进行交互。"

#: ../../distributedsearching.rst:32
msgid ""
"To federate the discovery of the three (3) portals into a unified search, pycsw realizes this "
"functionality by deploying an additional configuration which acts as the superset of CSW-1, CSW-2, "
"CSW-3:"
msgstr ""
"将这3个门户联合成统一的搜索，pycsw就可以通过部署超集的CSW-1、 CSW-2、 CSW-3 这些附加配置来实现此功"
"能："

#: ../../distributedsearching.rst:34
msgid "CSW-all: ``http://localhost/pycsw/csw.py?config=CSW-all.cfg``"
msgstr "所有的CSW: ``http://localhost/pycsw/csw.py?config=CSW-all.cfg``"

#: ../../distributedsearching.rst:36
msgid ""
"This allows the client to invoke one (1) CSW GetRecords request, in which the CSW endpoint spawns "
"the same GetRecords request to 1..n distributed CSW endpoints.  Distributed CSW endpoints are "
"advertised in CSW Capabilities XML via ``ows:Constraint``:"
msgstr ""
"这允许客户端调用 1 CSW GetRecords 请求，其中CSW端点就会生成相同的GetRecords请求，从1到n分布各个CSW 终"
"结点。分布式CSW端点通过 'ows:Constraint' 在CSW功能 XML上发布广告："

#: ../../distributedsearching.rst:50
msgid ""
"...which advertises which CSW endpoint(s) the CSW server will spawn if a distributed search is "
"requested by the client."
msgstr "...如果客户端请求分布式搜索，它会通告 CSW 服务器将生成哪些 CSW 端点。"

#: ../../distributedsearching.rst:52
msgid "in the CSW-all configuration:"
msgstr "在 CSW-all 配置中："

#: ../../distributedsearching.rst:60
msgid ""
"At which point a CSW client request to CSW-all with ``distributedsearch=TRUE``, while specifying an "
"optional ``hopCount``.  Query network topology:"
msgstr ""
"当指定选项 ``hopCount`` 时，CSW客户端就会用 ``distributedsearch=TRUE`` 请求所有的CSW。 查询网络拓扑："

#: ../../distributedsearching.rst:78
msgid ""
"As a result, a pycsw deployment in this scenario may be approached on a per 'theme' basis, or at an "
"aggregate level."
msgstr "因此，在这个场景中，pycsw 部署就会深入每个 '主题' 的基础部分或总体水平。"

#: ../../distributedsearching.rst:80
msgid ""
"All interaction in this scenario is local to the pycsw installation, so network performance would "
"not be problematic."
msgstr "在这个场景中的所有交互都是在本地pycsw 安装的，所以网络性能的好与坏是不会产生影响的。"

#: ../../distributedsearching.rst:82
msgid ""
"A very important facet of distributed search is as per Annex B of OGC:CSW 2.0.2.  Given that all the "
"CSW endpoints are managed locally, duplicates and infinite looping are not deemed to present an "
"issue."
msgstr ""
"分布式搜索的一个非常重要的方面是根据 OGC:CSW 2.0.2 的附件 B。鉴于所有 CSW 端点都在本地管理，重复和无"
"限循环不被视为存在问题。"
